#!/bin/sh

# Flush out the list before we begin.
ipfw -q -f flush

# Set rules command prefix
cmd="ipfw -q add"
ext_if="tun0"

# Control local connections
$cmd 00100 allow ip from any to any via lo0
$cmd 00200 deny ip from any to 127.0.0.0/8 
$cmd 00300 deny ip from 127.0.0.0/8 to any

# Check-state for SPI firewall rules
$cmd 01100 check-state

# Accept rules
$cmd 01200 allow tcp from me to any via $ext_if established
$cmd 01300 allow tcp from me to any via $ext_if setup keep-state
$cmd 01400 allow udp from me to any via $ext_if keep-state
$cmd 01500 allow icmp from me to any via $ext_if keep-state
$cmd 01600 allow udp from 0.0.0.0 68 to 255.255.255.255 dst-port 67 out via $ext_if
$cmd 01700 allow udp from any 67 to me dst-port 68 in via $ext_if
$cmd 01800 allow udp from any 67 to 255.255.255.255 dst-port 68 in via $ext_if
$cmd 01900 allow icmp from any to any via $ext_if icmptypes 8
$cmd 02000 allow icmp from any to any via $ext_if icmptypes 3,4,11

# Allow access to public DNS
$cmd 02500 allow tcp from any to 208.67.222.222 53 out via $ext_if setup keep-state
$cmd 02550 allow udp from any to 208.67.222.222 53 out via $ext_if keep-state
$cmd 02500 allow tcp from any to 208.67.220.220 53 out via $ext_if setup keep-state
$cmd 02550 allow udp from any to 208.67.220.220 53 out via $ext_if keep-state
$cmd 02600 allow tcp from any to 8.8.8.8 53 out via $ext_if setup keep-state
$cmd 02650 allow udp from any to 8.8.8.8 53 out via $ext_if keep-state
$cmd 02600 allow tcp from any to 8.8.4.4 53 out via $ext_if setup keep-state
$cmd 02650 allow udp from any to 8.8.4.4 53 out via $ext_if keep-state

# Allow outbound NTP
$cmd 02800 allow tcp from any to any 37 out via $ext_if setup keep-state
$cmd 02900 allow udp from any to any 123 out via $ext_if setup keep-state

# Deny and log all other outbound connections
$cmd 07990 deny log all from any to any out via $ext_if

# Update counters
$cmd 08000 count ip from any to any

# Deny rules

# Deny all inbound traffic from non-routable reserved address spaces
$cmd 08100 deny all from 192.168.0.0/16 to any in via $ext_if     #RFC 1918 private IP
$cmd 08200 deny all from 172.16.0.0/12 to any in via $ext_if      #RFC 1918 private IP
$cmd 08300 deny all from 10.0.0.0/8 to any in via $ext_if         #RFC 1918 private IP
$cmd 08400 deny all from 127.0.0.0/8 to any in via $ext_if        #loopback
$cmd 08500 deny all from 0.0.0.0/8 to any in via $ext_if          #loopback
$cmd 08600 deny all from 169.254.0.0/16 to any in via $ext_if     #DHCP auto-config
$cmd 08700 deny all from 192.0.2.0/24 to any in via $ext_if       #reserved for docs
$cmd 08800 deny all from 204.152.64.0/23 to any in via $ext_if    #Sun cluster interconnect
$cmd 08900 deny all from 224.0.0.0/3 to any in via $ext_if        #Class D & E multicast

# Deny NetBIOS
$cmd 09000 deny { tcp or udp } from any to any dst-port 81,135-139,445 in via $ext_if
$cmd 09100 deny { tcp or udp } from any to any dst-port 1026,1027 in via $ext_if
$cmd 09200 deny { tcp or udp } from any to any dst-port 1433,1434 in via $ext_if
$cmd 09300 deny ip from any to 255.255.255.255 via $ext_if
$cmd 09400 deny ip from any to 224.0.0.0/24 in via $ext_if
$cmd 09500 deny udp from any to any dst-port 520 in via $ext_if
$cmd 09600 deny tcp from any 80,443 to any dst-port 1024-65535 in via $ext_if

# Deny ident
$cmd 09800 deny tcp from any to any 113 in via $ext_if

# Deny fragments
$cmd 09900 deny all from any to any frag in via $ext_if

# Deny ACK packets that did not match the dynamic rule table
$cmd 10000 deny tcp from any to any established in via $ext_if

# Reject and log all other incoming connections
$cmd 60000 deny log all from any to any in via $ext_if

# Everything else is denied and logged
$cmd 65000 deny log all from any to any

